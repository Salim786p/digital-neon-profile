@tailwind base;
@tailwind components;
@tailwind utilities;

/* Cyberpunk Neon Design System - All colors MUST be HSL */

@layer base {
  :root {
    /* Cyberpunk color palette */
    color: red;
    
    --background: 240 6% 6%;
    --foreground: 180 100% 90%;

    --card: 240 8% 10%;
    --card-foreground: 180 100% 90%;

    --popover: 240 8% 10%;
    --popover-foreground: 180 100% 90%;

    /* Neon cyan primary */
    --primary: 180 100% 50%;
    --primary-foreground: 240 6% 6%;
    --primary-glow: 180 100% 70%;

    /* Neon purple secondary */
    --secondary: 280 100% 60%;
    --secondary-foreground: 240 6% 6%;
    --secondary-glow: 280 100% 80%;

    /* Neon green accent */
    --accent: 120 100% 50%;
    --accent-foreground: 240 6% 6%;
    --accent-glow: 120 100% 70%;

    /* Neon pink highlight */
    --highlight: 320 100% 60%;
    --highlight-foreground: 240 6% 6%;
    --highlight-glow: 320 100% 80%;

    --muted: 240 8% 15%;
    --muted-foreground: 180 20% 70%;

    --destructive: 0 84% 60%;
    --destructive-foreground: 0 0% 98%;

    --border: 240 20% 20%;
    --input: 240 20% 20%;
    --ring: 180 100% 50%;

    --radius: 0.5rem;

    /* Cyberpunk gradients */
    --gradient-primary: linear-gradient(135deg, hsl(var(--primary)), hsl(var(--primary-glow)));
    --gradient-secondary: linear-gradient(135deg, hsl(var(--secondary)), hsl(var(--secondary-glow)));
    --gradient-accent: linear-gradient(135deg, hsl(var(--accent)), hsl(var(--accent-glow)));
    --gradient-highlight: linear-gradient(135deg, hsl(var(--highlight)), hsl(var(--highlight-glow)));
    --gradient-cyberpunk: linear-gradient(45deg, hsl(var(--primary)), hsl(var(--secondary)), hsl(var(--highlight)));

    /* Neon shadows and glows */
    --shadow-primary: 0 0 20px hsl(var(--primary) / 0.5);
    --shadow-secondary: 0 0 20px hsl(var(--secondary) / 0.5);
    --shadow-accent: 0 0 20px hsl(var(--accent) / 0.5);
    --shadow-highlight: 0 0 20px hsl(var(--highlight) / 0.5);
    --shadow-intense: 0 0 40px hsl(var(--primary) / 0.8);

    /* Animations */
    --transition-smooth: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    --transition-bounce: all 0.5s cubic-bezier(0.68, -0.55, 0.265, 1.55);
  }
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply bg-background text-foreground;
    font-family: 'Rajdhani', sans-serif;
  }
  
  html {
    scroll-behavior: smooth;
  }
}

@layer components {
  .cyberpunk-border {
    position: relative;
  }
  
  .cyberpunk-border::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    border: 2px solid transparent;
    background: linear-gradient(45deg, hsl(var(--primary)), hsl(var(--secondary)), hsl(var(--accent))) border-box;
    mask: linear-gradient(#fff 0 0) padding-box, linear-gradient(#fff 0 0);
    mask-composite: exclude;
  }
  
  .glow-text {
    text-shadow: 0 0 10px currentColor;
  }
  
  .animation-delay-200 {
    animation-delay: 200ms;
  }
  
  .animation-delay-400 {
    animation-delay: 400ms;
  }
  
  .animation-delay-500 {
    animation-delay: 500ms;
  }
  
  .animation-delay-1000 {
    animation-delay: 1000ms;
  }
  
  /* Custom scrollbar */
  ::-webkit-scrollbar {
    width: 8px;
  }
  
  ::-webkit-scrollbar-track {
    background: hsl(var(--background));
  }
  
  ::-webkit-scrollbar-thumb {
    background: hsl(var(--primary));
    border-radius: 4px;
  }
  
  ::-webkit-scrollbar-thumb:hover {
    background: hsl(var(--primary-glow));
  }
}

@layer utilities {
  .text-gradient-primary {
    background: var(--gradient-primary);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
  }
  
  .text-gradient-secondary {
    background: var(--gradient-secondary);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
  }
  
  .text-gradient-cyberpunk {
    background: var(--gradient-cyberpunk);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
  }
}
